import os
import json
import requests
from flask import Flask, request, Response
from dotenv import load_dotenv

# ‚Äî‚Äî‚Äî –ó–∞–≥—Ä—É–∑–∫–∞ .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ‚Äî‚Äî‚Äî
load_dotenv()

API_KEY = os.getenv("OPENAI_API_KEY")
if not API_KEY:
    raise RuntimeError("‚ùå OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env!")

PORT = int(os.environ.get("PORT", 8080))
AI_URL = "https://api.openai.com/v1/chat/completions"

app = Flask(__name__)

# ‚Äî‚Äî‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî‚Äî‚Äî
@app.route("/", methods=["GET"])
def home():
    return "üî• –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Railway! –í–µ—Ä—Å–∏—è: /api + GPT", 200

# ‚Äî‚Äî‚Äî –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî‚Äî‚Äî
@app.route("/api", methods=["POST"])
def handle():
    try:
        data = request.get_json(force=True)

        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        text = data.get("text", "")
        style = data.get("style", "–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π")

        # –§–æ–ª–ª–±—ç–∫ –ø–æ —Å—Ç–∏–ª—é –æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ ‚Äî —Å—Ç–∞–≤–∏–º default)
        allowed_styles = ["–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π", "–¥–µ–ª–æ–≤–æ–π", "–¥–µ—Ä–∑–∫–∏–π"]
        if style not in allowed_styles:
            style = "–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è GPT
        messages = [
            {"role": "system", "content": f"–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: {style}"},
            {"role": "user", "content": text}
        ]

        # –ó–∞–ø—Ä–æ—Å –∫ OpenAI
        response = requests.post(
            AI_URL,
            headers={
                "Authorization": f"Bearer {API_KEY}",
                "Content-Type": "application/json"
            },
            json={
                "model": "gpt-3.5-turbo",
                "messages": messages,
                "max_tokens": 500,
                "temperature": 0.8
            }
        )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏ –ø–∞—Ä—Å–∏–Ω–≥
        if response.status_code != 200:
            raise RuntimeError(f"OpenAI error {response.status_code}: {response.text}")

        result = response.json()
        reply = result.get("choices", [{}])[0].get("message", {}).get("content", "ü§ñ –û—à–∏–±–∫–∞: –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç GPT.")

        # –û—Ç–≤–µ—Ç –±–µ–∑ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        return Response(
            json.dumps({"messages": [{"text": reply}]}, ensure_ascii=False),
            content_type="application/json; charset=utf-8"
        )

    except Exception as e:
        # –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        return Response(
            json.dumps({"error": str(e)}, ensure_ascii=False),
            content_type="application/json; charset=utf-8"
        ), 500

# ‚Äî‚Äî‚Äî –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞ Railway –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç) ‚Äî‚Äî‚Äî
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=PORT)
